swagger: "2.0"
info:
  version: 1.0.0
  title: My Petstore
  description: Sample API Petstore
  license:
    name: MIT
  contact:
    email: takushi.nishiyama.0314@gmail.com
host: localhost
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Pet
    description: Everything about your Pets
paths:
  /pets/{petId}:
    get:
      summary: get a pet
      operationId: getPetById
      tags:
        - Pet
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: Invalid ID format
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Pet not found
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Server Error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: update a pet
      tags:
        - Pet
      operationId: updatePetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Pet object that needs to be aded to the store
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        201:
          description: success
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: Invalid ID format
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Pet not found
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Server Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: delete a pet
      tags:
        - Pet
      operationId: deletePetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Pet object that needs to be aded to the store
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        200:
          description: success
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: Invalid ID format
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Pet not found
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Server Error
          schema:
            $ref: "#/definitions/Error"
  /pets:
    post:
      tags:
        - Pet
      summary: Add a new pet to the store
      operationId: addPet
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Pet object that needs to be aded to the store
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        201:
          description: created a new pet
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: Invalid input object
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Server Error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Pet:
    type: "object"
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  Pets:
    type: array
    items:
      $ref: '#/definitions/Pet'
  Error:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
